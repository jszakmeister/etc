ETC_HOME="${ETC_HOME:-$HOME/projects/etc}"
ETC_USER="${ETC_USER:-$(whoami)}"

_start_ansi='%{'
_end_ansi='%}'

# add a function path
fpath=("$ETC_HOME/zsh/functions" "$ETC_HOME/zsh/completions" $fpath)

# Put /usr/local in front as it is likely to be newer than what is packaged in
# etc.
test -d /usr/local/share/zsh/site-functions &&
    fpath=(/usr/local/share/zsh/site-functions $fpath)

# If the user setup ~/.zshenv, and sourced our zshenv,
# then we want to avoid sourcing a couple of scripts
# again.  That's especially true for exports.sh, since
# it'll modify the path variables again.
if [[ -z "$ETC_ZSHENV_SOURCED" ]]; then
    . "$ETC_HOME/zsh/zshenv"
else
    # We'll need to re-setup paths, since zprofile may have user
    # path_helper and messed up the path setup in zshenv.  So we
    # restore the path from zshenv here.  It may be someone wants
    # legitimately modify the path in zprofile, but I suspect not.
    if [ -n "$_ETC_SAVED_PATH" ]
    then
        PATH="$_ETC_SAVED_PATH"
    fi
fi

unset _ETC_SAVED_PATH

. "$ETC_HOME/zsh/shell-options.zsh"

. "$ETC_HOME/shell-common/interactive.sh"

for config_file ($ETC_HOME/zsh/lib/*.zsh) source $config_file

source "$ETC_HOME/zsh/themes/${ZSH_THEME:-jszakmeister}.zsh-theme"

test -f "$ETC_HOME/user/$ETC_USER/init.sh" &&
    . "$ETC_HOME/user/$ETC_USER/init.sh"

__etc_source_user_file interactive.sh

test -f "$HOME/.etcrc" && . "$HOME/.etcrc"

# Make sure the exit code is 0, so that we don't show an error code immediately
# on the prompt.
true
