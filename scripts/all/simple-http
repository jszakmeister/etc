#!/usr/bin/env python
import logging
import sys

try:
    import BaseHTTPServer
    import SimpleHTTPServer

    from SocketServer import ThreadingMixIn

    SimpleHTTPRequestHandler = SimpleHTTPServer.SimpleHTTPRequestHandler

    class ThreadingHTTPServer(ThreadingMixIn, BaseHTTPServer.HTTPServer):
        daemon_threads = True

    ServerClass = ThreadingHTTPServer

except ImportError:
    import http.server

    SimpleHTTPRequestHandler = http.server.SimpleHTTPRequestHandler
    ServerClass = http.server.ThreadingHTTPServer


class MyHTTPRequestHandler(SimpleHTTPRequestHandler):
    def log_message(self, format, *args):
        pass

    def end_headers(self):
        self.send_header("Access-Control-Allow-Origin", "*")

        SimpleHTTPRequestHandler.end_headers(self)


HandlerClass = MyHTTPRequestHandler
Protocol = "HTTP/1.1"

if sys.argv[1:]:
    listenAddr = sys.argv[1]
    if ':' in listenAddr:
        addr, port = listenAddr.split(':', 1)
        port = int(port)
    else:
        addr = '127.0.0.1'
        port = int(listenAddr)
else:
    addr = '127.0.0.1'
    port = 8081

server_address = (addr, port)

HandlerClass.protocol_version = Protocol
httpd = ServerClass(server_address, HandlerClass)

sa = httpd.socket.getsockname()
print("Serving HTTP on %s port %s..." % (sa[0], sa[1]))
logging.disable(logging.CRITICAL)
try:
    httpd.serve_forever()
except KeyboardInterrupt:
    pass
httpd.server_close()
