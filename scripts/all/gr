#!/bin/bash

function find-up-tree
{
    local last_found=$(pwd)
    local tmp_path=$(dirname "$last_found")
    local name="$1"

    while [[ "$tmp_path" != "/" ]];
    do
        if [ -e "$tmp_path/$name" ]; then
            last_found="$tmp_path"
            break
        fi
        tmp_path=$(dirname "$tmp_path")
    done
    if [ -e "$last_found/$name" ]; then
        echo -n $(trim $(cat "$last_found/$name"))
    else
        echo -n
    fi
}

function trim
{
    local var="$@"

    # Remove leading whitespace characters.
    var="${var#"${var%%[![:space:]]*}"}"

    # Remove trailing whitespace characters.
    var="${var%"${var##*[![:space:]]}"}"

    echo -n "$var"
}

OS=$(uname | tr '[A-Z]' '[a-z]')

IS_X_BASED=

GVIM=$(type -P mvim)
if test -z "$GVIM"; then
    GVIM=gvim
fi

case "$OS" in
    linux | *bsd)
        IS_X_BASED=true
        ;;
    darwin)
        ;;
    *)
        echo "Unrecognized OS: $OS" >& 2
        exit 1
esac

if [[ "$OS" == "darwin" && "$SKIP_GUI_CHECK" == "" ]]; then
    if test -z "$SECURITYSESSIONID" \
        -a "$TERM_PROGRAM" != "Apple_Terminal" \
        -a "$TERM_PROGRAM" != "iTerm.app" ; then
        echo >&2 "No GUI available"
        exit 1
    fi
fi

GR_NAME=$(find-up-tree .gr-name)
SERVER_NAME="$GR_NAME"

if [[ -n "$SSH_TTY" ]]; then
    if [[ -z "$SERVER_NAME" ]]; then
        SERVER_NAME="GVIM1"
    else
        SERVER_NAME="ssh-$SERVER_NAME"
    fi
else
    if [[ -z "$SERVER_NAME" ]]; then
        SERVER_NAME="GVIM0"
    fi
fi

extraopts=""
if [ -n "$IS_X_BASED" ]; then
    extraopts="$extraopts --name $SERVER_NAME"

    type -a wmctrl > /dev/null 2>&1 || {
        echo >&2 "ERROR: please install wmctrl" ;
        exit 1 ;
    }
fi

# Check to see if an alternate --remote option was passed.  If so, use it
# instead of --remote-silent.
remote_opt=--remote-silent

if [[ $1 == --remote* ]]; then
    remote_opt="$1"
    shift
fi

if [[ -n "$GR_VERBOSE" ]]; then
    extra_opts="$extra_opts -V${GR_VERBOSE}"
fi

for name in $("$GVIM" --serverlist | tr A-Z a-z)
do
    if [ "$name" == "$SERVER_NAME" ]
    then
        running=true
    fi
done

if [[ -n "$@" ]]; then
    GR_NAME="$GR_NAME" "$GVIM" $extraopts --servername $SERVER_NAME $remote_opt "$@" > /dev/null 2>&1
elif [[ -z "$running" ]]; then
    GR_NAME="$GR_NAME" "$GVIM" $extraopts --servername $SERVER_NAME > /dev/null 2>&1
fi

if [ $? -eq 0 ]; then
    if [[ "$OS" == "darwin" ]]; then
        if [[ -n "$running" ]]; then
            echo 'tell application "System Events" to set frontmost of process "MacVim" to true' | osascript
        fi
    elif [ -n "$IS_X_BASED" ]; then
        wmctrl -xa $SERVER_NAME.Gvim
    fi
else
    exit $?
fi
