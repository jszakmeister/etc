#!/bin/bash
OS=$(uname | tr '[A-Z]' '[a-z]')

GVIM=$(type -P mvim)
if test -z "$GVIM"; then
    GVIM=gvim
fi

if [[ "$OS" != "linux" && "$OS" != "darwin" ]]; then
    echo "Unrecognized OS" >& 2
    exit 1
fi

if [[ "$OS" == "darwin" ]]; then
    if test -z "$SECURITYSESSIONID" \
        -a "$TERM_PROGRAM" != "Apple_Terminal" \
        -a "$TERM_PROGRAM" != "iTerm.app" ; then
        echo >&2 "No GUI available"
        exit 1
    fi
fi

if [[ -n "$SSH_TTY" ]]; then
    SERVER_NAME="GVIM1"
else
    SERVER_NAME="GVIM0"
fi

extraopts=""
if [[ "$OS" == "linux" ]]; then
    extraopts="--name $SERVER_NAME"

    type -a wmctrl > /dev/null 2>&1 || {
        echo >&2 "ERROR: please install wmctrl" ;
        exit 1 ;
    }
fi

# Check to see if an alternate --remote option was passed.  If so, use it
# instead of --remote-silent.
remote_opt=--remote-silent

if [[ $1 == --remote* ]]; then
    remote_opt="$1"
    shift
fi

running=$("$GVIM" --serverlist | grep $SERVER_NAME)

if [[ -n "$@" ]]; then
    "$GVIM" $extraopts --servername $SERVER_NAME $remote_opt "$@"
elif [[ -z "$running" ]]; then
    "$GVIM" $extraopts --servername $SERVER_NAME
fi

if [ $? -eq 0 ]; then
    if [[ "$OS" == "darwin" ]]; then
        if [[ -n "$running" ]]; then
            echo 'tell application "System Events" to set frontmost of process "MacVim" to true' | osascript
        fi
    elif [[ "$OS" == "linux" ]]; then
        wmctrl -xa $SERVER_NAME.Gvim
    fi
else
    exit $?
fi
